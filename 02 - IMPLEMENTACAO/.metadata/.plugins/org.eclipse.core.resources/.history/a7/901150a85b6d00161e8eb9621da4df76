package br.edu.ifpb.sicAgro.services.impl;

import java.io.Serializable;
import java.util.List;

import br.edu.ifpb.sicAgro.dao.DAO;
import br.edu.ifpb.sicAgro.exceptions.PersistenceSicAgroException;
import br.edu.ifpb.sicAgro.exceptions.ServiceSicAgroException;
import br.edu.ifpb.sicAgro.services.Service;
import br.edu.ifpb.sicAgro.util.jpa.Transactional;

/**
 * Classe generica serve para implementar caracterisiticas comuns dos services,
 * para que suas classes filhas usem.
 * 
 * @author <a href="https://github.com/FranckAJ">Franck Arag√£o</a>
 *
 * @param <T>
 * @param <K>
 */
public class GenericServiceImpl<T, K> implements Service<T, K>, Serializable {

	private static final long serialVersionUID = 1026846993733369843L;

	protected DAO<T, K> dao;

	/**
	 * @throws ServiceSicAgroException
	 * 
	 */
	@Override
	@Transactional
	public void add(T entity) {
		dao.add(entity);
	}

	/**
	 * @throws ServiceSicAgroException
	 * 
	 */
	@Override
	@Transactional
	public T update(T entity) throws ServiceSicAgroException {
		try {
			return dao.update(entity);
		} catch (PersistenceSicAgroException e) {
			e.printStackTrace();
			throw new ServiceSicAgroException(e.getMessage());
		}
	}

	@Override
	@Transactional
	public void remove(T entity) {
		try {
			dao.remove(entity);
		} catch (PersistenceSicAgroException e) {
			e.printStackTrace();
		}
	}

	/**
	 * @throws ServiceSicAgroException
	 * 
	 */
	@Override
	public T findById(K id) throws ServiceSicAgroException {
		try {
			return dao.findById(id);
		} catch (PersistenceSicAgroException e) {
			e.printStackTrace();
			throw new ServiceSicAgroException(e.getMessage());
		}
	}

	/**
	 * @throws ServiceSicAgroException
	 * 
	 */
	@Override
	public List<T> findAll() throws ServiceSicAgroException {
		try {
			return dao.findAll();
		} catch (PersistenceSicAgroException e) {
			e.printStackTrace();
			throw new ServiceSicAgroException(e.getMessage());
		}
	}
}
