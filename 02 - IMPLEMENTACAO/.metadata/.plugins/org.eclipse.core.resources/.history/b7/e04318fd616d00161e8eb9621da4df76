package br.edu.ifpb.sicAgro.beans.pedidoSolicitacao;

import java.io.Serializable;

import javax.faces.view.ViewScoped;
import javax.inject.Inject;
import javax.inject.Named;

import br.edu.ifpb.sicAgro.enumerations.PedidoStatus;
import br.edu.ifpb.sicAgro.exceptions.SicAgroException;
import br.edu.ifpb.sicAgro.model.PedidoSolicitacao;
import br.edu.ifpb.sicAgro.services.PedidoSolicitacaoService;
import br.edu.ifpb.sicAgro.util.jsf.JSFUtils;

/**
 * Manager bean responsável por gerenciar as páginas referentes a visualização
 * de detalhes de pedido de solicitação
 * 
 * @author <a href="https://github.com/FranckAJ">Franck Aragão</a>
 *
 */

@Named
@ViewScoped
public class PedidoSolicitacaoViewBean implements Serializable {

	private static final long serialVersionUID = -5325152793743099030L;

	private PedidoSolicitacao pedidoSolicitacao;

	@Inject
	private PedidoSolicitacaoService pedidoSolicitacaoService;

	/**
	 * É iniciando no inicio da renderização da pagina de produtoView,
	 * responsável por obter um produto pelo contexto de aplicação.
	 */
	public void preRenderView() {
		pedidoSolicitacao = (PedidoSolicitacao) JSFUtils
				.getParam("pedidoSolicitacao");
	}

	public void rejeitar() throws SicAgroException {
		pedidoSolicitacao.setStatus(PedidoStatus.NOT_ACCEPTED);
		pedidoSolicitacaoService.update(pedidoSolicitacao);

	}

	/**
	 * Método responsável por atualizar pedido de solicitação com mensagem de
	 * rejeição, este método é chamado sempre que o usuário clica em rejeitar.
	 * @throws SicAgroException 
	 */
	public void updatePedidoSolicitacao() throws SicAgroException {
		pedidoSolicitacaoService.update(pedidoSolicitacao);
	}

	public PedidoSolicitacao getPedidoSolicitacao() {
		return pedidoSolicitacao;
	}

	public void setPedidoSolicitacao(PedidoSolicitacao pedidoSolicitacao) {
		this.pedidoSolicitacao = pedidoSolicitacao;
	}

}
